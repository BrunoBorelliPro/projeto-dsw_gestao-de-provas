// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("PRISMA_DATABASE_URL")
}

model Question {
  id String @id @default(uuid())

  content       String
  question_type String @default("multiple_choice")

  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  alternatives Alternative[]
  tests        Test[]
  Response     Response?

  @@map("questions")
}

model Response {
  id String @id @default(uuid())

  content     String
  question    Question @relation(fields: [question_id], references: [id])
  question_id String   @unique

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Alternative {
  id String @id @default(uuid())

  content     String
  is_correct  Boolean
  question_id String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  question Question @relation(fields: [question_id], references: [id])

  @@map("alternatives")
}

model Teacher {
  id String @id @default(uuid())

  name  String
  email String @unique

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  tests      Test[]

  @@map("teachers")
}

model Test {
  id String @id @default(uuid())

  title String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  teacher_id String

  teacher     Teacher       @relation(fields: [teacher_id], references: [id])
  questions   Question[]
  AppliedTest AppliedTest[]

  @@map("tests")
}

model Student {
  id String @id @default(uuid())

  name  String
  email String @unique

  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  AppliedTest AppliedTest[]

  @@map("students")
}

model AppliedTest {
  id String @id @default(uuid())

  available_until DateTime @default(now())

  student_id String
  test_id    String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  student      Student        @relation(fields: [student_id], references: [id])
  test         Test           @relation(fields: [test_id], references: [id])
  ResponseTest ResponseTest[]

  @@map("applied_tests")
}

model ResponseTest {
  id String @id @default(uuid())

  grade           Decimal
  applied_test_id String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  applied_test AppliedTest @relation(fields: [applied_test_id], references: [id])

  @@map("response_tests")
}
